services:

  setup_config:
    image: hairyhenderson/gomplate:latest
    working_dir: /workspace
    env_file:
      - ../.env-local
    volumes:
      - ./templates:/workspace/templates
      - ./generated:/workspace/output
    command: "-f /workspace/templates/hdfs-site-template.xml -o /workspace/output/hdfs-site.xml"

  setup_jars:
    image: maven:3.8.6-openjdk-11-slim
    depends_on:
      setup_config:
        condition: service_completed_successfully
    volumes:
      - ./jars:/mnt/jars
      - ./scripts/pom.xml:/usr/src/app/pom.xml
    working_dir: /usr/src/app
    networks:
      - hive
    command: >
      mvn dependency:copy-dependencies -DoutputDirectory=/mnt/jars
        
  postgres:
    image: postgres:17.0-bookworm
    depends_on:
      setup_jars:
        condition: service_completed_successfully
    restart: unless-stopped
    container_name: hive3-postgres
    hostname: postgres
    env_file:
      - path: .env
    environment:
      POSTGRES_DB: 'metastore_db'
      POSTGRES_USER: 'hive'
      POSTGRES_PASSWORD: 'password'
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '${EXT_POSTGRESQL_PORT}:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/pg_hba.conf:/tmp/pg_hba.conf
      - ./scripts/initdb.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - hive
    healthcheck:
      test: pg_isready -h localhost -d $$POSTGRES_DB -U $$POSTGRES_USER
      interval: 10s
      timeout: 5s
      retries: 5

  metastore:
    image: apache/hive:${HIVE_VERSION}
    platform: linux/amd64
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    container_name: hive3-metastore
    hostname: metastore
    env_file:
      - path: .env
      - path: ../.env-local
    environment:
      DB_DRIVER: postgres
      SERVICE_NAME: 'metastore'
      SERVICE_OPTS: '-Xmx1G -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
                     -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore_db
                     -Djavax.jdo.option.ConnectionUserName=hive
                     -Djavax.jdo.option.ConnectionPassword=password'
      HIVE_CUSTOM_CONF_DIR: /opt/hive/custom_conf
      HIVE_AUX_JARS_PATH: /opt/hive/lib/custom_lib
      # IS_RESUME: 'true'
      # VERBOSE: 'true'
    ports:
      - '${EXT_HIVE_METASTORE_PORT}:9083'
    volumes:
      - warehouse:/opt/hive/data/warehouse
      - ./generated/:/opt/hive/custom_conf/
      - ./jars/:/opt/hive/lib/custom_lib/
      - ./scripts/checkport.sh:/scripts/checkport.sh
    networks:
      - hive
    healthcheck:
      test: ["CMD", "bash", "-c", "/scripts/checkport.sh 9083"]
      interval: 30s
      retries: 10

  hiveserver2:
    image: apache/hive:${HIVE_VERSION}
    platform: linux/amd64
    depends_on:
      metastore:
        condition: service_healthy
    restart: unless-stopped
    container_name: hive3-hiveserver2
    env_file:
      - path: .env
      - path: ../.env-local
      # The hive image doesn't read the credentials from hdfs-site.xml
      # with inserts or updates.  It expects env vars, so we define them
      # in .env-aws-creds from the S3A_ creds we set in ../.env-local
      - path: ./.env-aws-creds
    environment:
      HIVESERVER2_THRIFT_PORT: 10000 # internal port
      SERVICE_OPTS: '-Xmx1G -Dhive.metastore.uris=thrift://metastore:9083'
      IS_RESUME: 'true'
      SERVICE_NAME: 'hiveserver2'
      HIVE_CUSTOM_CONF_DIR: /opt/hive/custom_conf
      HIVE_AUX_JARS_PATH: /opt/hive/lib/custom_lib
    ports:
      - '${EXT_HIVE_SERVER2_THRIFT_PORT}:10000'
      - '${EXT_HIVE_SERVER2_WEB_UI_PORT}:10002'
    volumes:
      - warehouse:/opt/hive/data/warehouse
      - ./generated/:/opt/hive/custom_conf/
      - ./jars/:/opt/hive/lib/custom_lib/
    networks:
      - hive

networks:
  hive:
    name: hive

volumes:
  config_data:
  postgres-data:
  warehouse:
