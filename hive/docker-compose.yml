services:

  setup_config:
    image: hairyhenderson/gomplate:latest
    working_dir: /workspace
    env_file:
      - ../.env-local
    volumes:
      - ./templates:/workspace/templates
      - ./generated:/workspace/output
    command: "-f /workspace/templates/hdfs-site-template.xml -o /workspace/output/hdfs-site.xml"

  setup_jars:
    image: alpine:latest
    depends_on:
      setup_config:
        condition: service_completed_successfully
    volumes:
      - ./jars:/mnt/jars
    networks:
      - hive
    command: >
      ash -c "apk add --no-cache --quiet curl &&
              curl -C - -s -o /mnt/jars/hadoop-aws.jar https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-aws/3.3.6/hadoop-aws-3.3.6.jar &&
              curl -C - -s -o /mnt/jars/aws-java-sdk-bundle.jar https://repo1.maven.org/maven2/com/amazonaws/aws-java-sdk-bundle/1.12.777/aws-java-sdk-bundle-1.12.777.jar &&
              curl -C - -s -o /mnt/jars/postgresql.jar https://repo1.maven.org/maven2/org/postgresql/postgresql/42.5.6/postgresql-42.5.6.jar
              "

  postgres:
    image: postgres
    depends_on:
      setup_jars:
        condition: service_completed_successfully
    restart: unless-stopped
    container_name: postgres
    hostname: postgres
    env_file:
      - path: .env
      - path: ../.env-local
    environment:
      POSTGRES_DB: 'metastore_db'
      POSTGRES_USER: 'hive'
      POSTGRES_PASSWORD: 'password'
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '${EXT_POSTGRESQL_PORT}:5432'
    volumes:
      - ./volumes/hive-db:/var/lib/postgresql/data
    networks:
      - hive
    healthcheck:
      test: pg_isready -h localhost -d $$POSTGRES_DB -U $$POSTGRES_USER
      interval: 10s
      timeout: 5s
      retries: 5

  metastore:
    image: apache/hive:${HIVE_VERSION}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    container_name: metastore
    hostname: metastore
    env_file:
      - path: .env
      - path: ../.env-local
    environment:
      DB_DRIVER: postgres
      SERVICE_NAME: 'metastore'
      SERVICE_OPTS: '-Xmx1G -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
                     -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore_db
                     -Djavax.jdo.option.ConnectionUserName=hive
                     -Djavax.jdo.option.ConnectionPassword=password'
      HIVE_CUSTOM_CONF_DIR: /opt/hive/custom_conf
    ports:
      - '${EXT_HIVE_METASTORE_PORT}:9083'
    volumes:
      - ./volumes/warehouse:/opt/hive/data/warehouse
      - ./generated/:/opt/hive/custom_conf/
      - ./jars/hadoop-aws.jar:/opt/hive/lib/hadoop-aws.jar
      - ./jars/aws-java-sdk-bundle.jar:/opt/hive/lib/aws-sdk-bundle.jar
      - ./jars/postgresql.jar:/opt/hive/lib/postgresql.jar
    networks:
      - hive

  hiveserver2:
    image: apache/hive:${HIVE_VERSION}
    depends_on:
      - metastore
    restart: unless-stopped
    container_name: hiveserver2
    env_file:
      - path: .env
      - path: ../.env-local
    environment:
      HIVESERVER2_THRIFT_PORT: 10000 # internal port
      SERVICE_OPTS: '-Xmx1G -Dhive.metastore.uris=thrift://metastore:9083'
      IS_RESUME: 'true'
      SERVICE_NAME: 'hiveserver2'
      HIVE_CUSTOM_CONF_DIR: /opt/hive/custom_conf
    ports:
      - '${EXT_HIVE_SERVER2_THRIFT_PORT}:10000'
      - '${EXT_HIVE_SERVER2_WEB_UI_PORT}:10002'
    volumes:
      - ./volumes/warehouse:/opt/hive/data/warehouse
      - ./generated/:/opt/hive/custom_conf/
      - ./jars/hadoop-aws.jar:/opt/hive/lib/hadoop-aws.jar
      - ./jars/aws-java-sdk-bundle.jar:/opt/hive/lib/aws-sdk-bundle.jar
    networks:
      - hive

networks:
  hive:
    name: hive

volumes:
  config_data:
